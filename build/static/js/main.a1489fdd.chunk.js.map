{"version":3,"sources":["components/weather/index.js","components/calendar/index.js","components/App.js","index.js"],"names":["App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","weather","setLang","setCity","setAPPID","state","day0","react_default","a","createElement","day1","day2","day3","day4","day5","getWeather","self","mo","moment","format","add","getWeatherForecastForDays","err","obj","setState","createForecast","list","setTimeout","day","index","icon","iconClass","today","id","console","log","index_esm","className","Math","floor","temp","max","Component","fa_index_esm","dist_default","fromNow","ticker","bind","assertThisInitialized","style","date","tz","time","dateFormat","timeNumeric","components_calendar","ReactDOM","render","src_components_App","document","getElementById"],"mappings":"uYAsHeA,cAxGb,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,GACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,IACNQ,IAAQC,QAAQ,MAChBD,IAAQE,QAAQ,aAChBF,IAAQG,SAAS,oCACjBV,EAAKW,MAAQ,CACXC,KAAMC,EAAAC,EAAAC,cAAA,YACNC,KAAMH,EAAAC,EAAAC,cAAA,YACNE,KAAMJ,EAAAC,EAAAC,cAAA,YACNG,KAAML,EAAAC,EAAAC,cAAA,YACNI,KAAMN,EAAAC,EAAAC,cAAA,YACNK,KAAMP,EAAAC,EAAAC,cAAA,aAXSf,oFAgBjBG,KAAKkB,kDAIL,IAAIC,EAAOnB,KAEPoB,EAAK,IAAIC,IACTZ,EAAOW,EAAGE,OAAO,OACjBT,EAAOO,EAAGG,IAAI,EAAG,QAAQD,OAAO,OAChCR,EAAOM,EAAGG,IAAI,EAAG,QAAQD,OAAO,OAChCP,EAAOK,EAAGG,IAAI,EAAG,QAAQD,OAAO,OAChCN,EAAOI,EAAGG,IAAI,EAAG,QAAQD,OAAO,OAChCL,EAAOG,EAAGG,IAAI,EAAG,QAAQD,OAAO,OAEpClB,IAAQoB,0BAA0B,EAAG,SAASC,EAAKC,GAEjDP,EAAKQ,SAAS,CACZlB,KAAMU,EAAKS,eAAeF,EAAIG,KAAK,GAAIpB,EAAM,GAC7CI,KAAMM,EAAKS,eAAeF,EAAIG,KAAK,GAAIhB,EAAM,GAC7CC,KAAMK,EAAKS,eAAeF,EAAIG,KAAK,GAAIf,EAAM,GAC7CC,KAAMI,EAAKS,eAAeF,EAAIG,KAAK,GAAId,EAAM,GAC7CC,KAAMG,EAAKS,eAAeF,EAAIG,KAAK,GAAIb,EAAM,GAC7CC,KAAME,EAAKS,eAAeF,EAAIG,KAAK,GAAIZ,EAAM,OAIjDa,WAAW,WACTX,EAAKD,cACJ,6CAGUQ,EAAKK,EAAKC,GACvB,IAAIC,EAAO,GACPC,EAAY,GACZC,EAAkB,IAAVH,EAAc,QAAU,GAC9BI,EAAKV,EAAItB,QAAQ,GAAGgC,GA8B1B,OA5BAC,QAAQC,IAAIZ,EAAItB,QAAQ,IAEpBgC,GAAM,KAAOA,EAAK,MACpBH,EAAOvB,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,MACPL,EAAY,gBAGVE,GAAM,KAAOA,EAAK,MACpBH,EAAOvB,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,MACPL,EAAY,QAGVE,GAAM,KAAOA,EAAK,MACpBH,EAAOvB,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,MACPL,EAAY,QAGH,MAAPE,IACFH,EAAOvB,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,MACPL,EAAY,SAGVE,GAAM,KAAOA,EAAK,MACpBH,EAAOvB,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,MACPL,EAAY,UAKZxB,EAAAC,EAAAC,cAAA,OAAK4B,UAAW,YAAcL,EAAQ,IAAMD,GAC1CxB,EAAAC,EAAAC,cAAA,OAAK4B,UAAW,SAAUP,GAC1BvB,EAAAC,EAAAC,cAAA,KAAG4B,UAAU,OAAOT,GACpBrB,EAAAC,EAAAC,cAAA,KAAG4B,UAAU,QAAQC,KAAKC,MAAMhB,EAAIiB,KAAKC,KAAzC,6CAMJ,OACElC,EAAAC,EAAAC,cAAA,OAAK4B,UAAU,WACZxC,KAAKQ,MAAMC,KACXT,KAAKQ,MAAMK,KACXb,KAAKQ,MAAMM,KACXd,KAAKQ,MAAMO,KACXf,KAAKQ,MAAMQ,KACXhB,KAAKQ,MAAMS,aAnGF4B,8CCQHlD,mLAbX,OACEe,EAAAC,EAAAC,cAAA,OAAK4B,UAAU,YACb9B,EAAAC,EAAAC,cAAA,OAAK4B,UAAU,iBACb9B,EAAAC,EAAAC,cAACkC,EAAA,EAAD,MADF,aACsBpC,EAAAC,EAAAC,cAACmC,EAAApC,EAAD,CAAQqC,SAAO,GAAf,eAEtBtC,EAAAC,EAAAC,cAAA,OAAK4B,UAAU,kBACb9B,EAAAC,EAAAC,cAACkC,EAAA,EAAD,MADF,iBAC0BpC,EAAAC,EAAAC,cAACmC,EAAApC,EAAD,CAAQqC,SAAO,GAAf,uBARhBH,sCCoDHlD,cAlDb,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDqD,OAASpD,EAAKoD,OAAOC,KAAZpD,OAAAqD,EAAA,EAAArD,QAAAqD,EAAA,EAAArD,CAAAD,KACdA,EAAKW,MAAQ,CAAE4C,MAAO,OAHLvD,oFAOjBG,KAAKiD,0CAIL,IAAI9B,EAAOnB,KACPqD,EAAO,IAAIhC,IAAOiC,GAAG,iBACrBC,EAAOC,IAAWH,EAAM,SACxBI,EAAcD,IAAWH,EAAM,QAC/BtB,EAAMyB,IAAWH,EAAM,WACvBD,EAAQ,MAGVA,EADEK,EAAc,KAAOA,EAAc,KAC7B,MAEA,QAGVzD,KAAK2B,SAAS,CACZ4B,KAAMA,EACNxB,IAAKA,EACLqB,MAAOA,IAGTtB,WAAW,WACTX,EAAK8B,UACJ,sCAIH,OACEvC,EAAAC,EAAAC,cAAA,OAAK4B,UAAU,OACb9B,EAAAC,EAAAC,cAAA,OAAK4B,UAAW,aAAexC,KAAKQ,MAAM4C,OACxC1C,EAAAC,EAAAC,cAACR,EAAD,MACAM,EAAAC,EAAAC,cAAA,OAAK4B,UAAU,SACb9B,EAAAC,EAAAC,cAAA,MAAI4B,UAAU,QAAQxC,KAAKQ,MAAM+C,OAEnC7C,EAAAC,EAAAC,cAAC8C,EAAD,eA5CQb,mBCFlBc,IAASC,OACPlD,EAAAC,EAAAC,cAACiD,EAAD,MACAC,SAASC,eAAe","file":"static/js/main.a1489fdd.chunk.js","sourcesContent":["import React, { Component } from \"react\"\nimport weather from \"openweather-apis\"\nimport moment from \"moment\"\nimport tz from \"moment-timezone\"\nimport \"./Weather.css\"\nimport {\n  WiDaySunny,\n  WiDayThunderstorm,\n  WiDayShowers,\n  WiSnow,\n  WiDayCloudy\n} from \"react-icons/wi\"\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    weather.setLang(\"en\")\n    weather.setCity(\"London,GB\")\n    weather.setAPPID(\"02d71a10fa94fbcff9086087d8d9297e\")\n    this.state = {\n      day0: <div />,\n      day1: <div />,\n      day2: <div />,\n      day3: <div />,\n      day4: <div />,\n      day5: <div />\n    }\n  }\n\n  componentWillMount() {\n    this.getWeather()\n  }\n\n  getWeather() {\n    let self = this\n\n    let mo = new moment()\n    let day0 = mo.format(\"ddd\")\n    let day1 = mo.add(1, \"days\").format(\"ddd\")\n    let day2 = mo.add(1, \"days\").format(\"ddd\")\n    let day3 = mo.add(1, \"days\").format(\"ddd\")\n    let day4 = mo.add(1, \"days\").format(\"ddd\")\n    let day5 = mo.add(1, \"days\").format(\"ddd\")\n\n    weather.getWeatherForecastForDays(6, function(err, obj) {\n      \n      self.setState({\n        day0: self.createForecast(obj.list[0], day0, 0),\n        day1: self.createForecast(obj.list[1], day1, 1),\n        day2: self.createForecast(obj.list[2], day2, 2),\n        day3: self.createForecast(obj.list[3], day3, 3),\n        day4: self.createForecast(obj.list[4], day4, 4),\n        day5: self.createForecast(obj.list[5], day5, 5)\n      })\n    })\n\n    setTimeout(() => {\n      self.getWeather()\n    }, 3600000) // Once an Hour\n  }\n\n  createForecast(obj, day, index) {\n    var icon = {}\n    var iconClass = \"\"\n    let today = index === 0 ? \"today\" : \"\"\n    const id = obj.weather[0].id\n\n    console.log(obj.weather[0])\n\n    if( id >= 200 && id < 300 ){\n      icon = <WiDayThunderstorm />\n      iconClass = \"Thunderstorm\"      \n    }\n\n    if( id >= 500 && id < 600 ){\n      icon = <WiDayShowers />\n      iconClass = \"Rain\"    \n    }    \n\n    if( id >= 600 && id < 700 ){\n      icon = <WiSnow />\n      iconClass = \"Snow\"    \n    }       \n    \n    if( id === 800 ){\n      icon = <WiDaySunny />\n      iconClass = \"Clear\"    \n    }      \n    \n    if( id >= 801 && id < 900 ){\n      icon = <WiDayCloudy />\n      iconClass = \"Clouds\"    \n    }       \n\n\n    return (\n      <div className={\"forecast \" + today + \" \" + iconClass}>\n        <div className={\"icon \"}>{icon}</div>\n        <p className=\"day\">{day}</p>\n        <p className=\"temp\">{Math.floor(obj.temp.max)} &#x2103;</p>\n      </div>\n    )\n  }\n\n  render() {\n    return (\n      <div className=\"weather\">\n        {this.state.day0}\n        {this.state.day1}\n        {this.state.day2}\n        {this.state.day3}\n        {this.state.day4}\n        {this.state.day5}\n      </div>\n    )\n  }\n}\n\nexport default App\n","import React, { Component } from \"react\"\nimport Moment from \"react-moment\"\nimport \"./calendar.css\"\n\nimport { FaUtensils, FaGift } from \"react-icons/fa\"\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"calendar\">\n        <div className=\"calendar-left\">\n          <FaGift /> Surprise <Moment fromNow>2019-07-24</Moment>\n        </div>\n        <div className=\"calendar-right\">\n          <FaGift /> J's Birthday <Moment fromNow>2019-11-23</Moment>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App\n","import React, { Component } from \"react\"\nimport moment from \"moment\"\nimport Weather from \"./weather/\"\nimport Calendar from \"./calendar/\"\nimport \"./App.css\"\nimport dateFormat from \"dateformat\"\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.ticker = this.ticker.bind(this)\n    this.state = { style: \"day\" }\n  }\n\n  componentWillMount() {\n    this.ticker()\n  }\n\n  ticker() {\n    let self = this\n    let date = new moment.tz(\"Europe/London\")\n    let time = dateFormat(date, \"HH:MM\")\n    let timeNumeric = dateFormat(date, \"HHMM\")\n    let day = dateFormat(date, \"dS mmmm\")\n    let style = \"day\"\n\n    if (timeNumeric > 700 && timeNumeric < 2300) {\n      style = \"day\"\n    } else {\n      style = \"night\"\n    }\n\n    this.setState({\n      time: time,\n      day: day,\n      style: style\n    })\n\n    setTimeout(() => {\n      self.ticker()\n    }, 1000)\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className={\"smartarse \" + this.state.style}>\n          <Weather />\n          <div className=\"clock\">\n            <h1 className=\"time\">{this.state.time}</h1>\n          </div>\n          <Calendar />\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './index.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}