{"version":3,"sources":["components/weather/index.js","components/calendar/index.js","components/App.js","index.js"],"names":["App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","weather","setLang","setCity","setAPPID","state","day0","react_default","a","createElement","day1","day2","day3","day4","day5","getWeather","self","mo","moment","format","add","getWeatherForecastForDays","err","obj","setState","createForecast","list","setTimeout","day","index","icon","iconClass","today","main","fa","className","Math","floor","temp","max","Component","dist_default","fromNow","dateFormat","require","ticker","bind","assertThisInitialized","style","date","tz","time","timeNumeric","components_calendar","ReactDOM","render","src_components_App","document","getElementById"],"mappings":"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","file":"static/js/main.2fea12f6.chunk.js","sourcesContent":["import React, { Component } from \"react\"\nimport weather from \"openweather-apis\"\nimport moment from \"moment\"\nimport tz from \"moment-timezone\"\nimport \"./Weather.css\"\nimport {\n  FaCloud,\n  FaSun,\n  FaSnowflake,\n  FaUmbrella,\n  FaTint,\n  FaBolt\n} from \"react-icons/fa\"\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    weather.setLang(\"en\")\n    weather.setCity(\"London,GB\")\n    weather.setAPPID(\"02d71a10fa94fbcff9086087d8d9297e\")\n    this.state = {\n      day0: <div />,\n      day1: <div />,\n      day2: <div />,\n      day3: <div />,\n      day4: <div />,\n      day5: <div />\n    }\n  }\n\n  componentWillMount() {\n    this.getWeather()\n  }\n\n  getWeather() {\n    let self = this\n\n    let mo = new moment()\n    let day0 = mo.format(\"ddd\")\n    let day1 = mo.add(1, \"days\").format(\"ddd\")\n    let day2 = mo.add(1, \"days\").format(\"ddd\")\n    let day3 = mo.add(1, \"days\").format(\"ddd\")\n    let day4 = mo.add(1, \"days\").format(\"ddd\")\n    let day5 = mo.add(1, \"days\").format(\"ddd\")\n\n    weather.getWeatherForecastForDays(6, function(err, obj) {\n      self.setState({\n        day0: self.createForecast(obj.list[0], day0, 0),\n        day1: self.createForecast(obj.list[1], day1, 1),\n        day2: self.createForecast(obj.list[2], day2, 2),\n        day3: self.createForecast(obj.list[3], day3, 3),\n        day4: self.createForecast(obj.list[4], day4, 4),\n        day5: self.createForecast(obj.list[5], day5, 5)\n      })\n    })\n\n    setTimeout(() => {\n      self.getWeather()\n    }, 3600000) // Once an Hour\n  }\n\n  createForecast(obj, day, index) {\n    var icon = {}\n    var iconClass = \"\"\n    let today = index === 0 ? \"today\" : \"\"\n\n    switch (obj.weather[0].main) {\n      case \"Thunderstorm\":\n        icon = <FaBolt />\n        iconClass = \"Thunderstorm\"\n        break\n      case \"Rain\":\n        icon = <FaUmbrella />\n        iconClass = \"Rain\"\n        break\n      case \"Drizzle\":\n        icon = <FaTint />\n        iconClass = \"Drizzle\"\n        break\n      case \"Snow\":\n        icon = <FaSnowflake />\n        iconClass = \"Snow\"\n        break\n      case \"Clear\":\n        icon = <FaSun />\n        iconClass = \"Clear\"\n        break\n      case \"Clouds\":\n        icon = <FaCloud />\n        iconClass = \"Clouds\"\n        break\n    }\n\n    return (\n      <div className={\"forecast \" + today + \" \" + iconClass}>\n        <div className={\"icon \"}>{icon}</div>\n        <p className=\"day\">{day}</p>\n        <p className=\"temp\">{Math.floor(obj.temp.max)} &#x2103;</p>\n      </div>\n    )\n  }\n\n  render() {\n    return (\n      <div className=\"weather\">\n        {this.state.day0}\n        {this.state.day1}\n        {this.state.day2}\n        {this.state.day3}\n        {this.state.day4}\n        {this.state.day5}\n      </div>\n    )\n  }\n}\n\nexport default App\n","import React, { Component } from \"react\"\nimport Moment from \"react-moment\"\nimport \"./calendar.css\"\n\nimport { FaUtensils, FaGift } from \"react-icons/fa\"\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"calendar\">\n        <div className=\"calendar-left\">\n          <FaUtensils /> B in Bologna <Moment fromNow>2018-11-02</Moment>\n        </div>\n        <div className=\"calendar-left\">\n          <FaGift /> J's Birthday <Moment fromNow>2018-11-23</Moment>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App\n","import React, { Component } from \"react\"\nimport moment from \"moment\"\nimport tz from \"moment-timezone\"\nimport Weather from \"./weather/\"\nimport Calendar from \"./calendar/\"\nimport \"./App.css\"\n\nimport { FaSun } from \"react-icons/fa\"\n\nvar dateFormat = require(\"dateformat\")\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.ticker = this.ticker.bind(this)\n    this.state = { style: \"day\" }\n  }\n\n  componentWillMount() {\n    this.ticker()\n  }\n\n  ticker() {\n    let self = this\n    let date = new moment.tz(\"Europe/London\")\n    let time = dateFormat(date, \"HH:MM\")\n    let timeNumeric = dateFormat(date, \"HHMM\")\n    let day = dateFormat(date, \"dS mmmm\")\n    let style = \"day\"\n\n    if (timeNumeric > 700 && timeNumeric < 2200) {\n      style = \"day\"\n    } else {\n      style = \"night\"\n    }\n\n    this.setState({\n      time: time,\n      day: day,\n      style: style\n    })\n\n    setTimeout(() => {\n      self.ticker()\n    }, 1000)\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className={\"smartarse \" + this.state.style}>\n          <Weather />\n          <div className=\"clock\">\n            <h1 className=\"time\">{this.state.time}</h1>\n          </div>\n          <Calendar />\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './index.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}